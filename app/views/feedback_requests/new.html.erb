<div class="min-h-screen bg-gray-50">
  <nav class="bg-white shadow">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <div class="flex items-center">
          <%= link_to "← Back to Requests", feedback_requests_path, class: "text-gray-700 hover:text-gray-900" %>
        </div>
        <div class="flex items-center space-x-4">
          <span class="text-sm text-gray-700">
            <span class="font-medium"><%= current_user.display_name %></span>
          </span>
        </div>
      </div>
    </div>
  </nav>

  <div class="max-w-4xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
      <div class="bg-white shadow sm:rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-6">
            Create Feedback Request
          </h3>
          
          <p class="text-sm text-gray-600 mb-6">
            Customize the questions people will answer when giving you feedback. You can have 2-6 questions.
          </p>

          <%= form_with model: @feedback_request, url: feedback_requests_path, data: { turbo: false }, class: "space-y-6" do |f| %>
            <div id="questions-container">
              <% @feedback_request.questions.each_with_index do |question, index| %>
                <div class="question-field mb-4" data-index="<%= index %>">
                  <label class="block text-sm font-medium text-gray-700 mb-2">
                    Question <%= index + 1 %>
                  </label>
                  <div class="flex space-x-2">
                    <%= text_field_tag "feedback_feedback_request[questions][#{index}][text]", 
                        question['text'],
                        class: "flex-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md",
                        placeholder: "What would you like to know?",
                        required: true %>
                    
                    <% if index >= 2 %>
                      <button type="button" 
                              onclick="removeQuestion(this)"
                              class="inline-flex items-center px-3 py-2 border border-red-300 shadow-sm text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                        Remove
                      </button>
                    <% end %>
                  </div>
                  <%= hidden_field_tag "feedback_feedback_request[questions][#{index}][id]", question['id'] %>
                </div>
              <% end %>
            </div>

            <div class="flex justify-between items-center pt-4 border-t">
              <button type="button" 
                      onclick="addQuestion()"
                      id="add-question-btn"
                      class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                </svg>
                Add Question
              </button>

              <%= f.submit "Create Feedback Request", 
                  class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
            </div>
          <% end %>
        </div>
      </div>

      <div class="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
        <h4 class="text-sm font-medium text-blue-800 mb-2">💡 Tips for Good Questions:</h4>
        <ul class="text-sm text-blue-700 space-y-1 list-disc list-inside">
          <li>Be specific - "How can I improve my presentation skills?" is better than "What should I improve?"</li>
          <li>Ask about behaviors, not personality</li>
          <li>Keep questions open-ended to get detailed feedback</li>
          <li>Focus on actionable areas you can improve</li>
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
let questionCount = <%= @feedback_request.questions.length %>;

function addQuestion() {
  if (questionCount >= 6) {
    alert('Maximum 6 questions allowed');
    return;
  }
  
  const container = document.getElementById('questions-container');
  const newIndex = questionCount;
  
  const questionHtml = `
    <div class="question-field mb-4" data-index="${newIndex}">
      <label class="block text-sm font-medium text-gray-700 mb-2">
        Question ${newIndex + 1}
      </label>
      <div class="flex space-x-2">
        <input type="text" 
               name="feedback_feedback_request[questions][${newIndex}][text]"
               class="flex-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
               placeholder="What would you like to know?"
               required>
        <button type="button" 
                onclick="removeQuestion(this)"
                class="inline-flex items-center px-3 py-2 border border-red-300 shadow-sm text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
          Remove
        </button>
      </div>
      <input type="hidden" name="feedback_feedback_request[questions][${newIndex}][id]" value="${newIndex + 1}">
    </div>
  `;
  
  container.insertAdjacentHTML('beforeend', questionHtml);
  questionCount++;
  updateQuestionNumbers();
}

function removeQuestion(button) {
  const questionField = button.closest('.question-field');
  questionField.remove();
  questionCount--;
  updateQuestionNumbers();
}

function updateQuestionNumbers() {
  const questions = document.querySelectorAll('.question-field');
  questions.forEach((question, index) => {
    const label = question.querySelector('label');
    label.textContent = `Question ${index + 1}`;
  });
}
</script>
